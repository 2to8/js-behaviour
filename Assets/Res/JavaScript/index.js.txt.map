{"version":3,"file":"index.js.txt","sources":["../../../Packages/src/sandbox/TestBind.ts","../../../Packages/src/component/component-base.ts","../../../Packages/src/component/component-info-mgr.ts","../../../Packages/src/component/component-decoration.ts","../../../Packages/src/component/component-inst-mgr.ts","../../../Packages/src/index.ts"],"sourcesContent":["﻿import { Sandbox, UnityEngine } from 'csharp';\nimport TestCs2Ts = Sandbox.TestCs2Ts;\nimport Debug = UnityEngine.Debug;\n\nexport default class TestBind extends TestCs2Ts {\n    public test2() {\n        Debug.Log(this.num + \" = test3\")\n        this.num = 111;\n    }\n}","import { Base } from \"csharp\";\nimport { ComponentInfo, PropertyInfo } from \"./component-info-mgr\";\n\n/**\n * 组件接口，回调时机同unity的mono behaviour\n */\nexport abstract class Component {\n    private BindProperty(instanceId: number): void {\n        console.log(`instanceId = ${instanceId}`);\n        this.behaviour = Base.Runtime.JsBehaviourMgr.Instance.Get(instanceId);\n        this.compInfo = (this as any)[\"componentInfo\"] as ComponentInfo;\n        for (let propName in this.compInfo.properties) {\n            const propInfo = this.compInfo.properties[propName];\n            (this as any)[propInfo.name] = this.GetPropertyValue(propInfo);\n        }\n    }\n\n    private UnbindProperty(): void {\n        for (let propName in this.compInfo.properties) {\n            const propInfo = this.compInfo.properties[propName];\n            (this as any)[propInfo.name] = undefined;\n        }\n    }\n\n    private GetPropertyValue(propInfo: PropertyInfo): any {\n        switch (propInfo.type) {\n            case \"System.Single\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetFloatList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetFloat(propInfo.name);\n            case \"System.String\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetStringList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetString(propInfo.name);\n            case \"System.Int32\":\n            case \"System.UInt32\":\n            case \"System.Int16\":\n            case \"System.UInt16\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetIntList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetInt(propInfo.name);\n            case \"System.Int64\":\n            case \"System.UInt64\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetLongList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetLong(propInfo.name);\n            case \"UnityEngine.Vector2\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetVector2List(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetVector2(propInfo.name);\n            case \"UnityEngine.Vector3\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetVector3List(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetVector3(propInfo.name);\n            default:\n                if (this.behaviour.JsComponentProp.IsUEObject(propInfo.type)) {\n                    return propInfo.isArray ?\n                        this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetUEObjectList(propInfo.name)) :\n                        this.behaviour.JsComponentProp.GetUEObject(propInfo.name);\n                }\n                return undefined;\n        }\n    }\n\n    private ConvertTypedListToArray(list: any): any[] {\n        let array: any[] = [];\n        if (list?.Data == null) {\n            return array;\n        }\n        for (let i = 0; i < list?.Data.Count; ++i) {\n            array.push(list.Data.get_Item(i));\n        }\n        return array;\n    }\n\n    private compInfo: ComponentInfo;\n    private behaviour: Base.Runtime.JsBehaviour;\n}\n","/**\n * 组件信息管理\n */\nclass ComponentInfoMgr {\n    /**\n     * 获取指定名字的组件信息JSON字符串，名字为空时返回所有组件信息\n     * @param componentName 组件名字\n     * @returns json格式的组件信息字符串\n     */\n    public getJsonString(componentName?: string): string {\n        if (!componentName) {\n            return JSON.stringify(this.componentInfos);\n        }\n        const componentInfo = this.componentInfos[componentName];\n        if (!componentInfo) {\n            return null;\n        }\n        return JSON.stringify(componentInfo);\n    }\n\n    /**\n     * 获取指定名字的组件信息，名字不能为空\n     * @param componentName 组件名\n     * @returns 组件信息\n     */\n    public getComponentInfo(componentName: string): ComponentInfo {\n        return this.componentInfos[componentName];\n    }\n\n    /**\n     * 注册组件\n     * @param name 组件名字\n     * @param cls 组件类\n     * @param path 组件在编辑器的inspector面板显示的索引路径\n     */\n    public registerComponent<T extends Constructor>(name: string, cls?: T, path?: string) {\n        let compInfo = this.componentInfos[name];\n        if (!compInfo) {\n            compInfo = {\n                name,\n                path,\n                properties: {}\n            }\n            this.componentInfos[name] = compInfo;\n        }\n        if (cls) {\n            this.componentClass[name] = cls;\n        }\n        compInfo.path = compInfo.path || path;\n    }\n\n    /**\n     * 向组件中添加组件的属性信息\n     * @param component 组件名字\n     * @param propInfo 组件信息\n     */\n    public addPropertyToComponent(component: string, propInfo: PropertyInfo) {\n        this.registerComponent(component);\n        const comp = this.componentInfos[component];\n        comp.properties[propInfo.name] = propInfo;\n    }\n\n    /**\n     * 查找组件构造函数\n     * @param component 组件名\n     * @returns 组件构造函数\n     */\n    public findComponentConstructor(component: string): Constructor {\n        return this.componentClass[component];\n    }\n\n    private componentClass: { [key: string]: Constructor } = {};\n    private componentInfos: ComponentInfos = {};\n}\n\n/**\n * 组件集合，由组件名索引\n */\n export type ComponentInfos = {\n    [key: string]: ComponentInfo\n};\n\n/**\n * 组件信息\n */\nexport type ComponentInfo = {\n    name: string,\n    path: string,\n    properties: { [key: string]: PropertyInfo },\n};\n\n/**\n * 组件的属性信息\n */\nexport type PropertyInfo = {\n    name: string;\n    type: string;\n    isArray?: boolean;\n    editable?: boolean;\n}\n\n\nexport type Constructor = new (...args:any[]) => any;\n\nexport const compInfoMgr = new ComponentInfoMgr();\n","import { $typeof } from \"puerts\";\nimport { compInfoMgr, Constructor, PropertyInfo } from \"./component-info-mgr\"\n\n/**\n * 组件类修饰器工厂，应用在非静态类上\n * @param componentPath 组件在编辑器的inspector面板显示的索引路径 \n * @returns 组件修饰器\n */\nexport function component(componentPath?: string): Function {\n    return function(constructor: Function) {\n        compInfoMgr.registerComponent(constructor.name, constructor as Constructor, componentPath);\n        constructor.prototype.componentInfo = compInfoMgr.getComponentInfo(constructor.name);\n    }\n}\n\n/**\n * 组件属性修改器工厂，应用在组件类的非静态变量上\n * @param option 属性选项\n * @returns 组件属性修饰器\n */\nexport function property(option: PropertyOption): Function;\n/**\n * 组件属性修改器工厂，应用在组件类的非静态变量上\n * @param type 属性类型\n * @returns 组件属性修饰器\n */\nexport function property<T extends Constructor>(type: T): Function;\n/**\n * 组件属性修改器工厂，应用在组件类的非静态变量上\n * @param type 属性类型，传入类型数组，表示当前属性类型是数组\n * @returns 组件属性修饰器\n */\nexport function property<T extends Constructor>(type: T[]): Function;\nexport function property(arg: any): Function {\n    return function(target: any, propertyKey: string) {\n        let propInfo: PropertyInfo = null;\n        if (typeof arg === 'function') {\n            propInfo = {\n                name: propertyKey,\n                type: $typeof((arg as Constructor)).FullName,\n                isArray: false,\n            };\n        }\n        else if (Array.isArray(arg)) {\n            propInfo = {\n                name: propertyKey,\n                type: $typeof((arg as Constructor[])[0]).FullName,\n                isArray: true,\n            };\n        }\n        else {\n            const isArray = Array.isArray(arg.type);\n            propInfo = {\n                name: propertyKey,\n                type: isArray ? $typeof((arg.type as Constructor[])[0]).FullName : $typeof((arg.type as Constructor)).FullName,\n                isArray: (arg.isArray === null || arg.isArray === undefined) ? isArray : arg.isArray,\n                editable: arg.editable\n            };\n        }\n        compInfoMgr.addPropertyToComponent(target.constructor.name, propInfo);\n    }\n}\n\ntype PropertyOption = {\n    type: Constructor | Constructor[];\n    isArray?: boolean;\n    editable?: boolean;\n}\n\ntype ArrayElement<ArrayType extends readonly unknown[]> = \n  ArrayType extends readonly (infer ElementType)[] ? ElementType : never;","import { Component } from \"./component-base\";\nimport { compInfoMgr } from \"./component-info-mgr\";\n\nclass ComponentInstMgr {\n    /**\n     * 给定一个组件类名，创建对应的实例\n     * @param className 组件类名\n     * @returns 返回实例ID\n     */\n    public newComponent(className: string): number {\n        const componentCls = compInfoMgr.findComponentConstructor(className);\n        if (!componentCls) {\n            console.error(`cannot find component constructor ${className}.`);\n            return InvalidComponentID;\n        }\n        const componentId = ++this.componentIdSeed;\n        this.components[componentId] = new componentCls();\n        return componentId;\n    }\n\n    /**\n     * 删除一个组件实例\n     * @param componentId 组件实例ID\n     */\n    public delComponent(componentId: number) {\n        delete this.components[componentId];\n    }\n\n    /**\n     * 获取组件实例上的一个方法名\n     * @param componentId 组件实例ID\n     * @param methodName 方法名\n     * @returns 绑定组件实例后的方法\n     */\n    public getComponentMethod(componentId: number, methodName: string): Function {\n        const componentInst = this.components[componentId];\n        if (!componentInst) {\n            console.error(`cannot find component with id ${componentId}.`);\n            return undefined;\n        }\n        const method = (componentInst as any)[methodName] as Function;\n        if (!method) {\n            return undefined;\n        }\n        return method.bind(componentInst);\n    }\n\n    private componentIdSeed = 0;\n    private components: { [key: number]: Component } = {};\n}\n\nexport const InvalidComponentID = -1;\n\nexport const compInstMgr = new ComponentInstMgr;","import TestBind from 'sandbox/TestBind';\nimport { Sandbox, System, UnityEngine } from 'csharp';\nimport { Component } from 'component/component-base';\nimport { component, property } from 'component/component-decoration';\nimport TestScript = Sandbox.TestScript;\nimport Debug = UnityEngine.Debug;\nimport TestCs2Ts = Sandbox.TestCs2Ts;\n\nexport * from './component/component-info-mgr';\nexport * from './component/component-inst-mgr';\n\nglobal.hello = (s: string) => {\n    Debug.Log(`hello, ${ s }`)\n}\n\n// TestCs2Ts.prototype.test = function() {\n//     Debug.Log(this.num + ' = test')\n//     this.num = 123;\n// }\n\n\nconst p = Object.getOwnPropertyNames(TestBind.prototype);\nconsole.log(p); // [ 'constructor', 'echo', 'info' ]\nfor (var i in p) {\n    var name = p[i];\n    Debug.Log(name);\n    TestCs2Ts.prototype[name] = TestBind.prototype[name];\n}\n\n//TestCs2Ts.prototype['test2'] = TestBind.prototype['test2'];\n\nglobal.testBind = (obj: TestBind) => {\n    Debug.Log('test bind 4');\n    //Debug.Log(obj.num);\n    obj.num = 5;\n    obj.test2();\n}\n\n/**\n * 使用component修饰器定义TestBehaviour为Js组件\n */\n@component()\nclass TestBehaviour extends Component {\n    /**\n     * 使用property修饰器定义需要在Inspector上显示的属性及其类型\n     */\n    @property(UnityEngine.GameObject) prop1: UnityEngine.GameObject;\n    \n    /**\n     * editable未实现，仅演示功能扩展模式\n     */\n    @property({\n        type: System.Single, editable: true,\n    }) prop2: number;\n    \n    /**\n     * 数组的几种定义形式\n     */\n    @property({\n        type: UnityEngine.GameObject, isArray: true,\n    }) prop3: UnityEngine.GameObject[];\n    @property([ UnityEngine.Vector3 ]) prop4: UnityEngine.Vector3[];\n    @property({\n        type: [ System.UInt32 ],\n    }) prop5: number[];\n    \n    @property(UnityEngine.Camera) prop6: UnityEngine.Camera;\n    \n    @property(UnityEngine.Vector3) prop7: UnityEngine.Vector3;\n    \n    public Awake() {\n        \n        //  let _功夫=\"如来神掌\";\n        // gf\n        // logging_trace_with_error.js\n        let test = {\n            add(x, y) {\n                console.log(new Error().stack);\n                return x + y;\n            },\n            \n            calc() {\n                return this.add(8, 11) + this.add(9, 14);\n            },\n            \n            main() {\n                let x = this.add(2, 3);\n                let y = this.calc();\n            },\n        }\n        \n        global.testScript = (mb: TestScript) => {\n            mb.script = this as any;\n            console.log('test hello');\n            (mb.script as unknown as TestBehaviour).SayHello();\n        }\n        \n        test.main();\n        console.log('Awake');\n        \n        //console.log(xxx.xxx);\n        console.log(`prop1 = ${ this.prop1 }`);\n        console.log(`prop2 = ${ this.prop2 }`);\n        console.log(`prop3 = ${ this.prop3 }`);\n        console.log(`prop4 = ${ this.prop4.length }`);\n        console.log(`prop5 = ${ this.prop5 }`);\n        console.log(`prop6 = ${ this.prop6 }`);\n        console.log(`prop7 = {${ this.prop7.x }, ${ this.prop7.y }, ${ this.prop7.z }}`);\n    }\n    \n    public Start() {\n        console.log('Start');\n        \n    }\n    \n    public SayHello() {\n        console.log('Hello, not bad!')\n    }\n    \n    public OnEnable() {\n        console.log('OnEnable');\n    }\n    \n    public OnDisable() {\n        console.log('OnDisable');\n    }\n    \n    public OnDestroy() {\n        console.log('OnDestroy');\n    }\n}\n\n@component('User')\nclass UserBehaviour1 {\n}\n\n@component('User')\nclass UserBehaviour2 {\n}\n\n@component('User')\nclass UserBehaviour3 {\n}\n\n@component('System')\nclass SystemBehaviour1 {\n}\n\n@component('System')\nclass SystemBehaviour2 {\n}\n\n@component('System')\nclass SystemBehaviour3 {\n}"],"names":["TestCs2Ts","Sandbox","Debug","UnityEngine","Base","$typeof","System"],"mappings":"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"}