{"version":3,"file":"index.js.txt","sources":["../../../Packages/src/app/graph/DebugText.ts","../../../Packages/src/libs/cs_helpers.ts","../../../Packages/src/libs/cs_presets.ts","../../../Packages/src/libs/Dictionary.ts","../../../Packages/src/sandbox/TestBind.ts","../../../Packages/src/support/utils.ts","../../../Packages/src/component/component-base.ts","../../../Packages/src/component/component-info-mgr.ts","../../../Packages/src/component/component-decoration.ts","../../../Packages/src/views/TestBehaviour.ts","../../../Packages/src/component/component-inst-mgr.ts","../../../Packages/src/index.ts"],"sourcesContent":["﻿import { NodeCanvas, UnityEngine } from 'csharp';\nimport DebugLogText = NodeCanvas.Tasks.Actions.DebugLogText;\nimport Debug = UnityEngine.Debug;\n\nexport class DebugText extends DebugLogText {\n    OnExecute() {\n        Debug.Log(`[Js] ${this.log.value}`);\n    }\n}                 ","import { Common, NodeCanvas, System, UnityEngine, Utils } from 'csharp';\nimport { $generic, $typeof } from 'puerts';\nimport Dictionary$2 = System.Collections.Generic.Dictionary$2;\nimport String = System.String;\nimport JSAdapter = Common.JSAdapter;\nimport Helpers = Common.JSAdapter.sqlite3.Helpers;\n\nexport function isDefined<T>(value: T | undefined | null): value is T {\n    return <T> value !== undefined && <T> value !== null && (!(<T> value instanceof UnityEngine.Object) || !(<T> value as unknown as UnityEngine.Object)?.Equals(null));\n}\n\nexport function Dictionary<TKey, TValue>(k: new() => TKey, v: new() => TValue): Dictionary$2<TKey, TValue> {\n    return Helpers.MakeDictionary($typeof(k), $typeof(v));\n}\n\n/**\n * https://allknowboy.com/posts/576eb6bf/#TS%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F\n * @returns {SingletonTemp}\n * @constructor\n */\nexport function Singleton<T>() {\n    class SingletonTemp {\n        private static _instance: any;\n        protected constructor() {}\n        static getInstance() : T {\n            if (!SingletonTemp._instance) {\n                SingletonTemp._instance = new this();\n            }\n            return SingletonTemp._instance as T;\n        }\n    }\n    return SingletonTemp;\n}\n\n","// https://stackoverflow.com/questions/42088007/is-there-source-map-support-for-typescript-in-node-nodemon\n// import sourceMapSupport from 'source-map-support'\n\n//import \"node-window-polyfill/register\";\n\nimport { System,  Unity, UnityEngine } from 'csharp';\nimport { $extension, $typeof, emit, off, on } from 'puerts';\nimport { isDefined } from './cs_helpers';\nimport List$1 = System.Collections.Generic.List$1;\nimport * as puerts from 'puerts';\nimport GameObject = UnityEngine.GameObject;\nimport Transform = UnityEngine.Transform;\n\nglobal.process = global.process || {} as any\nprocess.env = process.env || {} as any\nif (!process.on) {\n    Object.assign(process, {\n        on: on, off: off, emit: emit,\n    })\n}\n\nprocess.on('unhandledRejection', console.log);\n\nUnityEngine.Object.prototype.valueOf = function() {\n    return this.Equals(null) ? null : this;\n}\n\nUnityEngine.GameObject.prototype['GetInChild'] = \n    function <T extends UnityEngine.Component>($type: new (...args: any[]) => T, $includeInactive?: boolean):\n        System.Array$1<T> {\n    if (!($type instanceof System.Type)) {\n        $type = $typeof($type) as any;\n    }\n    return (this as GameObject).GetComponentsInChildren($type as any) as any;\n}\n\nSystem.Array.prototype[Symbol.iterator] = function* () {\n    let _this = this as System.Array;\n    for (let i = 0; i < _this.Length; i++) {\n        yield _this.GetValue(i)\n    }\n}\n\n// Object.defineProperty(System.Array.prototype,Symbol.iterator,function() {\n//     let values = [];\n//     let iterator = this.GetEnumerator();\n//     while (iterator.MoveNext()) {\n//         let key = iterator.Current;\n//         values.push({ key: key, value: this.get_Item(key) });\n//     }\n//     return {\n//         index: 0, values: values, next() {\n//             let index = this.index++;\n//             return {\n//                 value: this.values[index], done: index >= this.values.length,\n//             };\n//         },\n//     }\n// } )\n\nUnityEngine.Transform.prototype[Symbol.iterator] = function() {\n    let target = this;\n    return (function* () {\n        for (let i = 0; i < target.childCount; i++) {\n            yield target.GetChild(i);\n        }\n        \n    })();\n}\n\n// $extension(GameObject, TetrisUtil);\n// $extension(Transform, TetrisUtil);\n\nUnityEngine.GameObject.prototype[Symbol.iterator] = function() {\n    let target = this.transform;\n    return (function* () {\n        for (let i = 0; i < target.childCount; i++) {\n            yield target.GetChild(i);\n        }\n    })();\n}\n\nObject.defineProperty(System.Array.prototype, 'toArray', {\n    enumerable: true, writable: true, value: function(): any[] {\n        let arr = [];\n        for (let i = 0n; i < this.Length; i++) {\n            arr.push(this.GetValue(i))\n        }\n        return arr;\n    },\n})\n\nif (List$1?.prototype != null) {\n    Object.defineProperty(List$1.prototype, 'toArray', {\n        enumerable: true, writable: true, value: function(): any[] {\n            let arr = [];\n            for (let i = 0; i < this.Count(); i++) {\n                arr.push(this.get_Item(i))\n            }\n            return arr;\n        },\n    })\n}\n\nObject.defineProperty(Object.prototype, 'tap', {\n    value: function(intercept) {\n        var val = (this instanceof Number || this instanceof String || this instanceof Boolean || this instanceof UnityEngine.Object) ? this.valueOf() : this;\n        intercept(val);\n        return val;\n    }, enumerable: true, configurable: true, writable: true,\n});\n\n// https://gist.github.com/getify/9104721\nif (!(Symbol.iterator in Object.prototype)) {\n    Object.defineProperty(Object.prototype, Symbol.iterator, {\n        enumerable: true, writable: true, configurable: true, // thanks to:\n                                                              // https://twitter.com/juandopazo/status/436298238464122880\n        value: function* () {\n            var o = this;\n            var ks = Object.keys(o);\n            for (var idx = 0, length = ks.length; idx < length; idx++) {\n                yield o[ks[idx]];\n            }\n        },\n    });\n}\n\n// Object.prototype.tap = function(intercept){\n//     var val = (this instanceof Number || this instanceof String || this instanceof Boolean ||\n// this instanceof UnityEngine.Object) ? this.valueOf() : this; intercept(val); return val; }\n\n// See if an array contains an object\nArray.prototype.contains = function(obj) {\n    var i = this.length;\n    while (i--) {\n        if (this[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Global declaration\n//declare var IsDefined: typeof isDefined;\n\n// Global scope augmentation\nvar window = window || null;\nconst _global = (window || global) as any;\n_global.IsDefined = isDefined;\n\npuerts.registerBuildinModule('path', {\n    dirname(path) {\n        return System.IO.Path.GetDirectoryName(path);\n    }, resolve(dir, url) {\n        url = url.replace(/\\\\/g, '/');\n        while (url.startsWith('../')) {\n            dir = System.IO.Path.GetDirectoryName(dir);\n            url = url.substr(3);\n        }\n        return System.IO.Path.Combine(dir, url);\n    },\n});\npuerts.registerBuildinModule('fs', {\n    existsSync(path) {\n        return System.IO.File.Exists(path);\n    }, readFileSync(path) {\n        return System.IO.File.ReadAllText(path);\n    },\n});\n(function() {\n    let global = this ?? globalThis;\n    global['Buffer'] = global['Buffer'] ?? {};\n})();\n//sourceMapSupport.install();\n\n//import 'source-map-support/register'\n\n\n\n","import { System } from 'csharp';\r\nimport { $generic, $typeof } from 'puerts';\r\nimport './cs_presets'\r\nimport { Item } from 'Widget/Item';\r\nimport Dictionary$2 = System.Collections.Generic.Dictionary$2;\r\nimport List$1 = System.Collections.Generic.List$1;\r\n// #region Dictionary<TKey,TValue> 扩展, 替换 $generic 方法\r\nconst srcGeneric = $generic;\r\n// cache types\r\nlet list = new Array<System.Type>();\r\n\r\nglobalThis.instances = globalThis.instances || new Set();\r\n\r\nglobalThis.I = globalThis.I || function <T>(c: { new(...args: any): T; }, ...args: any): T {\r\n    if (!globalThis.instances.has(c)) {\r\n        globalThis.instances.set(c, args[0] instanceof c ? args[0] : new c(...args));\r\n    }\r\n    return globalThis.instances.get(c);\r\n}\r\n\r\nfunction cache(type: System.Type) {\r\n    if (!type) return false;\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (type.Equals(list[i])) return false;\r\n    }\r\n    list.push(type);\r\n    return true;\r\n}\r\n\r\n// overwrite generic method\r\nexport function generic<T extends new (...args: any[]) => any>(genericType: T, ...genericArguments: (new (...args: any[]) => any)[]): T {\r\n    let Class = srcGeneric(genericType, ...genericArguments);\r\n    let type = $typeof(Class);\r\n    if (genericArguments.length == 2 && cache(type)) {\r\n        try {\r\n            let dictType = $typeof(srcGeneric(System.Collections.Generic.Dictionary$2, ...genericArguments));\r\n            if (dictType && dictType.IsAssignableFrom(type)) {\r\n                Class.prototype['forEach'] = function(callbackfn: (v: any, k: any) => void | boolean) {\r\n                    let iterator = this.Keys.GetEnumerator();\r\n                    while (iterator.MoveNext()) {\r\n                        let key = iterator.Current;\r\n                        let ret = callbackfn(this.get_Item(key), key);\r\n                        if (ret !== void 0 && !ret) break;\r\n                    }\r\n                }\r\n                Class.prototype['getKeys'] = function() {\r\n                    let result = [];\r\n                    let iterator = this.Keys.GetEnumerator();\r\n                    while (iterator.MoveNext()) {\r\n                        result.push(iterator.Current);\r\n                    }\r\n                    return result;\r\n                }\r\n                Class.prototype['getValues'] = function() {\r\n                    let result = [];\r\n                    let iterator = this.Values.GetEnumerator();\r\n                    while (iterator.MoveNext()) {\r\n                        result.push(iterator.Current);\r\n                    }\r\n                    return result;\r\n                }\r\n                Class.prototype[Symbol.iterator] = function() {\r\n                    let values = [];\r\n                    let iterator = this.Keys.GetEnumerator();\r\n                    while (iterator.MoveNext()) {\r\n                        let key = iterator.Current;\r\n                        values.push({ key: key, value: this.get_Item(key) });\r\n                    }\r\n                    return {\r\n                        index: 0, values: values, next() {\r\n                            let index = this.index++;\r\n                            return {\r\n                                value: this.values[index], done: index >= this.values.length,\r\n                            };\r\n                        },\r\n                    };\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n    return Class as T;\r\n}\r\n\r\n// replace method\r\n(function() {\r\n    let puerts = globalThis['puerts'];\r\n    if (puerts && puerts['$generic'].toString() !== generic.toString()) {\r\n        puerts['$generic'] = generic;\r\n        puerts['$srcGeneric'] = srcGeneric;\r\n    } else {\r\n        console.log(\"puerts reloaded\")\r\n        //throw new Error('puerts is undefined or redefinition \\'$generic\\'');\r\n    }\r\n})();\r\n// #endregion\r\n\r\n// #region Uint8Array 与 byte[] 类型互转\r\nexport function Uint8ArrayToBytes(data: Uint8Array): System.Array$1<number> {\r\n    let result = System.Array.CreateInstance($typeof(System.Byte), data.length) as System.Array$1<number>;\r\n    for (let i = 0; i < result.Length; i++) {\r\n        result.set_Item(i, data[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function BytesToUint8Array(data: System.Array$1<number>): Uint8Array {\r\n    let result = new Uint8Array(data.Length);\r\n    for (let i = 0; i < data.Length; i++) {\r\n        result[i] = data.get_Item(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function fixList<T extends System.Object>(Class: List$1<T>, c?: new(...args: any) => T): List$1<T> {\r\n    if (Class == null && c != null) {\r\n        let List = $generic(List$1, c);\r\n        Class = new List<T>() as any\r\n    }\r\n    if (!Class.hasOwnProperty('forEach')) {\r\n        Object.defineProperty(Class, 'forEach', {\r\n            value: function(fn: (value: T, k?: number) => void | boolean) {\r\n                let iterator = this.GetEnumerator();\r\n                let i = -1;\r\n                while (iterator.MoveNext()) {\r\n                    let key = iterator.Current;\r\n                    let ret = fn(key/*this.get_Item(i += 1)*/, i+=1);\r\n                    if (ret !== void 0 && !ret) break;\r\n                }\r\n            },\r\n        });\r\n    }\r\n    if (!Class.hasOwnProperty('array')) {\r\n        Object.defineProperty(Class, 'array', {\r\n            get: function() {\r\n                let result = [];\r\n                let iterator = this.GetEnumerator();\r\n                while (iterator.MoveNext()) {\r\n                    result.push(iterator.Current);\r\n                }\r\n                return result;\r\n            },\r\n        });\r\n    }\r\n    Object.defineProperty(Class, Symbol.iterator, {\r\n        value: function() {\r\n            let values = [];\r\n            let iterator = this.GetEnumerator();\r\n            while (iterator.MoveNext()) {\r\n                let key = iterator.Current;\r\n                values.push({ key: key, value: this.get_Item(key) });\r\n            }\r\n            return {\r\n                index: 0, values: values, next() {\r\n                    let index = this.index++;\r\n                    return {\r\n                        value: this.values[index], done: index >= this.values.length,\r\n                    };\r\n                },\r\n            }\r\n        },\r\n    });\r\n    return Class;\r\n}\r\n\r\nexport function fixDict<TKey, TValue>(Class: Dictionary$2<TKey, TValue>, TK?: new(...args: any) => TKey, TV?: new(...args: any) => TValue): Dictionary$2<TKey, TValue> {\r\n    if (Class == null && TK != null && TV != null) {\r\n        while ($typeof(TK).IsGenericType) {\r\n            TK = $generic(TK);\r\n        }\r\n        while ($typeof(TV).IsGenericType) {\r\n            TV = $generic(TV);\r\n        }\r\n        let Dict = $generic(Dictionary$2, TK, TV);\r\n        Class = new Dict<TKey, TValue>() as any\r\n    }\r\n    if (!Class.hasOwnProperty('forEach')) {\r\n        Object.defineProperty(Class, 'forEach', {\r\n            value: function(fn: (v: any, k: any) => void | boolean) {\r\n                let iterator = this.Keys.GetEnumerator();\r\n                while (iterator.MoveNext()) {\r\n                    let key = iterator.Current;\r\n                    let ret = fn(this.get_Item(key), key);\r\n                    if (ret !== void 0 && !ret) break;\r\n                }\r\n            },\r\n        });\r\n    }\r\n    \r\n    if (!Class.hasOwnProperty('keys')) {\r\n        Object.defineProperty(Class, 'keys', {\r\n            get: function() {\r\n                let result = [];\r\n                let iterator = this.Keys.GetEnumerator();\r\n                while (iterator.MoveNext()) {\r\n                    result.push(iterator.Current);\r\n                }\r\n                return result;\r\n            },\r\n        });\r\n    }\r\n    \r\n    if (!Class.hasOwnProperty('values')) {\r\n        Object.defineProperty(Class, 'values', {\r\n            get: function() {\r\n                let result = [];\r\n                let iterator = this.Values.GetEnumerator();\r\n                while (iterator.MoveNext()) {\r\n                    result.push(iterator.Current);\r\n                }\r\n                return result;\r\n            },\r\n        });\r\n    }\r\n    \r\n    if (!Class.hasOwnProperty('map')) {\r\n        Object.defineProperty(Class, 'map', {\r\n            get: function(): Map<TKey, TValue> {\r\n                let result = new Map<TKey, TValue>();\r\n                let iterator = this.Keys.GetEnumerator();\r\n                let v = this.Values.GetEnumerator();\r\n                while (iterator.MoveNext() && v.MoveNext()) {\r\n                    result.set(iterator.Current, v.Current);\r\n                }\r\n                return result;\r\n            },\r\n        });\r\n    }\r\n    \r\n    Object.defineProperty(Class, Symbol.iterator, {\r\n        value: function() {\r\n            let values = [];\r\n            let iterator = this.Keys.GetEnumerator();\r\n            while (iterator.MoveNext()) {\r\n                let key = iterator.Current;\r\n                values.push({ key: key, value: this.get_Item(key) });\r\n            }\r\n            return {\r\n                index: 0, values: values, next() {\r\n                    let index = this.index++;\r\n                    return {\r\n                        value: this.values[index], done: index >= this.values.length,\r\n                    };\r\n                },\r\n            }\r\n        },\r\n    });\r\n    return Class;\r\n}\r\n\r\n//   fixDict(Dictionary$2.prototype)\r\n\r\n/**\r\n * 属性装饰器\r\n * @param {Item | (typeof Item | typeof Item[])[]} p\r\n * @returns {any}\r\n */\r\nexport function find(...p: (typeof Item | (typeof Item | (typeof Item)[])[])[]) {\r\n    \r\n    /**\r\n     *   属性装饰器固定形式, 返回void, 第一个参数是属性的对象, 第二个是属性名\r\n     *   target[propertyName] 设置属性值\r\n     *   https://blog.csdn.net/ZZB_Bin/article/details/103168609\r\n     */\r\n    return (target: any, propertyName: string) => {\r\n        let value = null;\r\n        target[propertyName] = value;\r\n        // 在类的原型属性 'someMethod' 上定义元数据，key 为 `methodMetaData`，value 为 `b`\r\n        // Reflect.defineMetadata('methodMetaData', 'b', target, key);\r\n    };\r\n}\r\n\r\nexport function dict_install() {\r\n    //(function() {\r\n    let csharp = globalThis['puerts'];\r\n    csharp['Uint8ArrayToBytes'] = Uint8ArrayToBytes;\r\n    csharp['BytesToUint8Array'] = BytesToUint8Array;\r\n    //})()\r\n}\r\n\r\n//#endregion","﻿import { Sandbox, UnityEngine } from 'csharp';\nimport TestCs2Ts = Sandbox.TestCs2Ts;\nimport Debug = UnityEngine.Debug;\n\nexport default class TestBind extends TestCs2Ts {\n    public test2() {\n        Debug.Log(this.num + \" = test7..\")\n        this.num = 100;\n        //\n    }\n}","﻿import { Constructor } from 'component/component-info-mgr';\nimport { $typeof } from 'puerts';\nimport TestBind from 'sandbox/TestBind';\n\nexport function uses(...c: Constructor[]) {\n    c.forEach(type => {\n        let pr = Object.getPrototypeOf(type.prototype);\n        if ($typeof(pr.constructor) != null) {\n            \n            Object.getOwnPropertyNames(type.prototype).forEach(name => {\n                console.log(`[check] ${ type.name }[${ $typeof(pr.constructor).FullName }] => ${ name }`)\n                pr[name] = type.prototype[name];\n            });\n            (global.$providers as Map<string,any>).set($typeof(pr.constructor).FullName,type);\n        }\n    })\n}","import { Base } from \"csharp\";\nimport { ComponentInfo, PropertyInfo } from \"./component-info-mgr\";\n\n/**\n * 组件接口，回调时机同unity的mono behaviour\n */\nexport abstract class Component {\n    private BindProperty(instanceId: number): void {\n        console.log(`instanceId = ${instanceId}`);\n        this.behaviour = Base.Runtime.JsBehaviourMgr.Instance.Get(instanceId);\n        this.compInfo = (this as any)[\"componentInfo\"] as ComponentInfo;\n        for (let propName in this.compInfo.properties) {\n            const propInfo = this.compInfo.properties[propName];\n            (this as any)[propInfo.name] = this.GetPropertyValue(propInfo);\n        }\n    }\n\n    private UnbindProperty(): void {\n        for (let propName in this.compInfo.properties) {\n            const propInfo = this.compInfo.properties[propName];\n            (this as any)[propInfo.name] = undefined;\n        }\n    }\n\n    private GetPropertyValue(propInfo: PropertyInfo): any {\n        switch (propInfo.type) {\n            case \"System.Single\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetFloatList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetFloat(propInfo.name);\n            case \"System.String\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetStringList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetString(propInfo.name);\n            case \"System.Int32\":\n            case \"System.UInt32\":\n            case \"System.Int16\":\n            case \"System.UInt16\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetIntList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetInt(propInfo.name);\n            case \"System.Int64\":\n            case \"System.UInt64\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetLongList(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetLong(propInfo.name);\n            case \"UnityEngine.Vector2\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetVector2List(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetVector2(propInfo.name);\n            case \"UnityEngine.Vector3\":\n                return propInfo.isArray ?\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetVector3List(propInfo.name)) :\n                    this.behaviour.JsComponentProp.GetVector3(propInfo.name);\n            default:\n                if (this.behaviour.JsComponentProp.IsUEObject(propInfo.type)) {\n                    return propInfo.isArray ?\n                        this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetUEObjectList(propInfo.name)) :\n                        this.behaviour.JsComponentProp.GetUEObject(propInfo.name);\n                }\n                return undefined;\n        }\n    }\n\n    private ConvertTypedListToArray(list: any): any[] {\n        let array: any[] = [];\n        if (list?.Data == null) {\n            return array;\n        }\n        for (let i = 0; i < list?.Data.Count; ++i) {\n            array.push(list.Data.get_Item(i));\n        }\n        return array;\n    }\n\n    private compInfo: ComponentInfo;\n    private behaviour: Base.Runtime.JsBehaviour;\n}\n","/**\n * 组件信息管理\n */\nclass ComponentInfoMgr {\n    /**\n     * 获取指定名字的组件信息JSON字符串，名字为空时返回所有组件信息\n     * @param componentName 组件名字\n     * @returns json格式的组件信息字符串\n     */\n    public getJsonString(componentName?: string): string {\n        if (!componentName) {\n            return JSON.stringify(this.componentInfos);\n        }\n        const componentInfo = this.componentInfos[componentName];\n        if (!componentInfo) {\n            return null;\n        }\n        return JSON.stringify(componentInfo);\n    }\n\n    /**\n     * 获取指定名字的组件信息，名字不能为空\n     * @param componentName 组件名\n     * @returns 组件信息\n     */\n    public getComponentInfo(componentName: string): ComponentInfo {\n        return this.componentInfos[componentName];\n    }\n\n    /**\n     * 注册组件\n     * @param name 组件名字\n     * @param cls 组件类\n     * @param path 组件在编辑器的inspector面板显示的索引路径\n     */\n    public registerComponent<T extends Constructor>(name: string, cls?: T, path?: string) {\n        let compInfo = this.componentInfos[name];\n        if (!compInfo) {\n            compInfo = {\n                name,\n                path,\n                properties: {}\n            }\n            this.componentInfos[name] = compInfo;\n        }\n        if (cls) {\n            this.componentClass[name] = cls;\n        }\n        compInfo.path = compInfo.path || path;\n    }\n\n    /**\n     * 向组件中添加组件的属性信息\n     * @param component 组件名字\n     * @param propInfo 组件信息\n     */\n    public addPropertyToComponent(component: string, propInfo: PropertyInfo) {\n        this.registerComponent(component);\n        const comp = this.componentInfos[component];\n        comp.properties[propInfo.name] = propInfo;\n    }\n\n    /**\n     * 查找组件构造函数\n     * @param component 组件名\n     * @returns 组件构造函数\n     */\n    public findComponentConstructor(component: string): Constructor {\n        return this.componentClass[component];\n    }\n\n    private componentClass: { [key: string]: Constructor } = {};\n    private componentInfos: ComponentInfos = {};\n}\n\n/**\n * 组件集合，由组件名索引\n */\n export type ComponentInfos = {\n    [key: string]: ComponentInfo\n};\n\n/**\n * 组件信息\n */\nexport type ComponentInfo = {\n    name: string,\n    path: string,\n    properties: { [key: string]: PropertyInfo },\n};\n\n/**\n * 组件的属性信息\n */\nexport type PropertyInfo = {\n    name: string;\n    type: string;\n    isArray?: boolean;\n    editable?: boolean;\n}\n\n\nexport type Constructor = new (...args:any[]) => any;\n\nexport const compInfoMgr = new ComponentInfoMgr();\n","import { $typeof } from \"puerts\";\nimport { compInfoMgr, Constructor, PropertyInfo } from \"./component-info-mgr\"\n\n/**\n * 组件类修饰器工厂，应用在非静态类上\n * @param componentPath 组件在编辑器的inspector面板显示的索引路径 \n * @returns 组件修饰器\n */\nexport function component(componentPath?: string): Function {\n    return function(constructor: Function) {\n        compInfoMgr.registerComponent(constructor.name, constructor as Constructor, componentPath);\n        constructor.prototype.componentInfo = compInfoMgr.getComponentInfo(constructor.name);\n    }\n}\n\n/**\n * 组件属性修改器工厂，应用在组件类的非静态变量上\n * @param option 属性选项\n * @returns 组件属性修饰器\n */\nexport function property(option: PropertyOption): Function;\n/**\n * 组件属性修改器工厂，应用在组件类的非静态变量上\n * @param type 属性类型\n * @returns 组件属性修饰器\n */\nexport function property<T extends Constructor>(type: T): Function;\n/**\n * 组件属性修改器工厂，应用在组件类的非静态变量上\n * @param type 属性类型，传入类型数组，表示当前属性类型是数组\n * @returns 组件属性修饰器\n */\nexport function property<T extends Constructor>(type: T[]): Function;\nexport function property(arg: any): Function {\n    return function(target: any, propertyKey: string) {\n        let propInfo: PropertyInfo = null;\n        if (typeof arg === 'function') {\n            propInfo = {\n                name: propertyKey,\n                type: $typeof((arg as Constructor)).FullName,\n                isArray: false,\n            };\n        }\n        else if (Array.isArray(arg)) {\n            propInfo = {\n                name: propertyKey,\n                type: $typeof((arg as Constructor[])[0]).FullName,\n                isArray: true,\n            };\n        }\n        else {\n            const isArray = Array.isArray(arg.type);\n            propInfo = {\n                name: propertyKey,\n                type: isArray ? $typeof((arg.type as Constructor[])[0]).FullName : $typeof((arg.type as Constructor)).FullName,\n                isArray: (arg.isArray === null || arg.isArray === undefined) ? isArray : arg.isArray,\n                editable: arg.editable\n            };\n        }\n        compInfoMgr.addPropertyToComponent(target.constructor.name, propInfo);\n    }\n}\n\ntype PropertyOption = {\n    type: Constructor | Constructor[];\n    isArray?: boolean;\n    editable?: boolean;\n}\n\ntype ArrayElement<ArrayType extends readonly unknown[]> = \n  ArrayType extends readonly (infer ElementType)[] ? ElementType : never;","﻿import { Component } from 'component/component-base';\nimport { component, property } from 'component/component-decoration';\nimport { Sandbox, System, UnityEngine } from 'csharp';\nimport TestScript = Sandbox.TestScript;\n\n@component('User')\nexport class UserBehaviour1 {\n}\n\n@component('User')\nexport class UserBehaviour2 {\n}\n\n@component('User')\nexport class UserBehaviour3 {\n}\n\n@component('System')\nexport class SystemBehaviour1 {\n}\n\n@component('System')\nexport class SystemBehaviour2 {\n}\n\n@component('System')\nexport class SystemBehaviour3 {\n}\n\n/**\n * 使用component修饰器定义TestBehaviour为Js组件\n */\n@component()\nexport  class TestBehaviour extends Component {\n    /**\n     * 使用property修饰器定义需要在Inspector上显示的属性及其类型\n     */\n    @property(UnityEngine.GameObject) prop1: UnityEngine.GameObject;\n    \n    /**\n     * editable未实现，仅演示功能扩展模式\n     */\n    @property({\n        type: System.Single, editable: true,\n    }) prop2: number;\n    \n    /**\n     * 数组的几种定义形式\n     */\n    @property({\n        type: UnityEngine.GameObject, isArray: true,\n    }) prop3: UnityEngine.GameObject[];\n    @property([ UnityEngine.Vector3 ]) prop4: UnityEngine.Vector3[];\n    @property({\n        type: [ System.UInt32 ],\n    }) prop5: number[];\n    \n    @property(UnityEngine.Camera) prop6: UnityEngine.Camera;\n    \n    @property(UnityEngine.Vector3) prop7: UnityEngine.Vector3;\n    \n    public Awake() {\n        \n        //  let _功夫=\"如来神掌\";\n        // gf\n        // logging_trace_with_error.js\n        let test = {\n            add(x, y) {\n                console.log(new Error().stack);\n                return x + y;\n            },\n            \n            calc() {\n                return this.add(8, 11) + this.add(9, 14);\n            },\n            \n            main() {\n                let x = this.add(2, 3);\n                let y = this.calc();\n            },\n        }\n        \n        global.testScript = (mb: TestScript) => {\n            mb.script = this as any;\n            console.log('test hello');\n            (mb.script as unknown as TestBehaviour).SayHello();\n        }\n        \n        test.main();\n        console.log('Awake');\n        \n        //console.log(xxx.xxx);\n        console.log(`prop1 = ${ this.prop1 }`);\n        console.log(`prop2 = ${ this.prop2 }`);\n        console.log(`prop3 = ${ this.prop3 }`);\n        console.log(`prop4 = ${ this.prop4.length }`);\n        console.log(`prop5 = ${ this.prop5 }`);\n        console.log(`prop6 = ${ this.prop6 }`);\n        console.log(`prop7 = {${ this.prop7.x }, ${ this.prop7.y }, ${ this.prop7.z }}`);\n    }\n    \n    public Start() {\n        console.log('Start');\n        \n    }\n    \n    public SayHello() {\n        console.log('Hello, not bad!')\n    }\n    \n    public OnEnable() {\n        console.log('OnEnable');\n    }\n    \n    public OnDisable() {\n        console.log('OnDisable');\n    }\n    \n    public OnDestroy() {\n        console.log('OnDestroy');\n    }\n}","import { Component } from \"./component-base\";\nimport { compInfoMgr } from \"./component-info-mgr\";\n\nclass ComponentInstMgr {\n    /**\n     * 给定一个组件类名，创建对应的实例\n     * @param className 组件类名\n     * @returns 返回实例ID\n     */\n    public newComponent(className: string): number {\n        const componentCls = compInfoMgr.findComponentConstructor(className);\n        if (!componentCls) {\n            console.error(`cannot find component constructor ${className}.`);\n            return InvalidComponentID;\n        }\n        const componentId = ++this.componentIdSeed;\n        this.components[componentId] = new componentCls();\n        return componentId;\n    }\n\n    /**\n     * 删除一个组件实例\n     * @param componentId 组件实例ID\n     */\n    public delComponent(componentId: number) {\n        delete this.components[componentId];\n    }\n\n    /**\n     * 获取组件实例上的一个方法名\n     * @param componentId 组件实例ID\n     * @param methodName 方法名\n     * @returns 绑定组件实例后的方法\n     */\n    public getComponentMethod(componentId: number, methodName: string): Function {\n        const componentInst = this.components[componentId];\n        if (!componentInst) {\n            console.error(`cannot find component with id ${componentId}.`);\n            return undefined;\n        }\n        const method = (componentInst as any)[methodName] as Function;\n        if (!method) {\n            return undefined;\n        }\n        return method.bind(componentInst);\n    }\n\n    private componentIdSeed = 0;\n    private components: { [key: number]: Component } = {};\n}\n\nexport const InvalidComponentID = -1;\n\nexport const compInstMgr = new ComponentInstMgr;","import { DebugText } from 'app/graph/DebugText';\nimport { dict_install } from 'libs/Dictionary';\nimport TestBind from 'sandbox/TestBind';\nimport { Sandbox, System, UnityEngine } from 'csharp';\nimport { Component } from 'component/component-base';\nimport { component, property } from 'component/component-decoration';\nimport { uses } from 'support/utils';\nimport { SystemBehaviour1, SystemBehaviour2, SystemBehaviour3, TestBehaviour, UserBehaviour1, UserBehaviour2, UserBehaviour3 } from 'views/TestBehaviour';\nimport TestScript = Sandbox.TestScript;\nimport Debug = UnityEngine.Debug;\nimport TestCs2Ts = Sandbox.TestCs2Ts;\n\nexport * from './component/component-info-mgr';\nexport * from './component/component-inst-mgr';\n\nimport EcsInit from 'EcsInit';\n\nglobal.$hello = (s: string) => {\n    Debug.Log(`hello, ${ s }`)\n}\n\n// TestCs2Ts.prototype.test = function() {\n//     Debug.Log(this.num + ' = test')\n//     this.num = 123;\n// }\n\nglobal.$testPrototype = function() {\n    const p = Object.getOwnPropertyNames(TestBind.prototype);\n    console.log(p); // [ 'constructor', 'echo', 'info' ]\n    p.forEach(name => {\n        Debug.Log(name);\n        TestCs2Ts.prototype[name] = TestBind.prototype[name];\n    });\n}\n\n// for (let i in p) {\n//     let name = p[i];\n//   \n// }\n\ndict_install();\n\nglobal.$providers = new Map<string, any>();\nglobal.$require = (obj: System.Object, fn: string, ...args: any[]) => {\n    if(!global.$providers.has(obj.GetType().FullName)) {\n        Debug.LogError(`${obj.GetType().FullName} 没有添加到 module 列表`)\n        return;\n    }\n    obj[fn].call(obj, ...args);\n}\n\n//TestCs2Ts.prototype['test2'] = TestBind.prototype['test2'];\n\nglobal.$testBind = (obj: TestBind) => {\n    Debug.Log('test bind 5');\n    Debug.Log(obj.num);\n    obj.num = 5;\n    obj.test2();\n}\n\n\nuses(   //\n    TestBind,//\n    DebugText,//\n    TestBehaviour, //\n    UserBehaviour1, UserBehaviour2, UserBehaviour3,  //\n    SystemBehaviour1, SystemBehaviour2, SystemBehaviour3, //\n);\n\n"],"names":["NodeCanvas","Debug","UnityEngine","Common","System","on","off","emit","$typeof","puerts","$generic","TestCs2Ts","Sandbox","Base"],"mappings":"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"}